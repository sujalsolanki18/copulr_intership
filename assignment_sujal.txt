1. total amount each customer spent

Query=
----------------------------------------------
SELECT
    s.customer_id,
    SUM(m.price) AS total_amount
FROM
    sales s
JOIN
    menu m ON s.product_id = m.product_id
GROUP BY
    s.customer_id;
---------------------------------------------
O/P =
---------------------------------------------
| customer_id  | total_amount  |
| ------------ | ------------- |
| A            | 50            |
| B            | 35            |
| C            | 40            |


2. How many days each customer visited

QUERY =
-----------------------------------------------
SELECT
    customer_id,
    COUNT(DISTINCT order_date) AS visit_days
FROM
    sales
GROUP BY
    customer_id;
-----------------------------------------------

| customer_id  | visit_days  |
| ------------ | ----------- |
| A            | 3           |
| B            | 2           |
| C            | 1           |


3. First item purchased by each customer
-------------------------------------------------
SELECT
    s.customer_id,
    s.order_date,
    m.product_name
FROM
    sales s
JOIN
    menu m ON s.product_id = m.product_id
WHERE
    (s.customer_id, s.order_date) IN (
        SELECT
            customer_id,
            MIN(order_date)
        FROM
            sales
        GROUP BY
            customer_id
    );
---------------------------------------------------

| customer_id  | order_date  | product_name  |
| ------------ | ----------- | ------------- |
| A            | 2021-01-01  | Curry         |
| B            | 2021-01-02  | Sushi         |
| C            | 2021-01-03  | Ramen         |


4. Most purchased item on the menu
-----------------------------------------------------

SELECT
    m.product_name,
    COUNT(*) AS order_count
FROM
    sales s
JOIN
    menu m ON s.product_id = m.product_id
GROUP BY
    m.product_name
ORDER BY
    order_count DESC

-----------------------------------------------------

| product_name  | order_count  |
| ------------- | ------------ |
| Curry         | 3            |

5. Most popular item for each customer
-----------------------------------------------------

WITH ranked AS (
    SELECT
        s.customer_id,
        m.product_name,
        COUNT(*) AS order_count,
        ROW_NUMBER() OVER (
            PARTITION BY s.customer_id
            ORDER BY COUNT(*) DESC
        ) AS rn
    FROM
        sales s
    JOIN
        menu m ON s.product_id = m.product_id
    GROUP BY
        s.customer_id,
        m.product_name
)
SELECT
    customer_id,
    product_name,
    order_count
FROM
    ranked
WHERE
    rn = 1;
--------------------------------------------------------

| customer_id  | product_name  | order_count  |
| ------------ | ------------- | ------------ |
| A            | Curry         | 2            |
| B            | Sushi         | 1            |
| C            | Ramen         | 1            |

6. Item purchased first after membership
--------------------------------------------------------
WITH after_join AS (
    SELECT
        s.customer_id,
        s.order_date,
        m.product_name
    FROM
        sales s
    JOIN
        members mem ON s.customer_id = mem.customer_id
    JOIN
        menu m ON s.product_id = m.product_id
    WHERE
        s.order_date >= mem.join_date
)
SELECT
    customer_id,
    MIN(order_date) AS first_purchase_date,
    product_name
FROM
    after_join
GROUP BY
    customer_id;

-----------------------------------------------------------
| customer_id  | first_purchase_date   | product_name  |
| ------------ | --------------------- | ------------- |
| A            | 2021-01-07            | Curry         |
| B            | 2021-01-09            | Sushi         |

7. Item purchased just before membership
-------------------------------------------------------------
WITH before_join AS (
    SELECT
        s.customer_id,
        s.order_date,
        m.product_name
    FROM
        sales s
    JOIN
        members mem ON s.customer_id = mem.customer_id
    JOIN
        menu m ON s.product_id = m.product_id
    WHERE
        s.order_date < mem.join_date
)
SELECT
    customer_id,
    MAX(order_date) AS last_purchase_before_join,
    product_name
FROM
    before_join
GROUP BY
    customer_id;
-----------------------------------------------------------------

| customer_id  | last_purchase_before_join    | product_name  |
| ------------ | ---------------------------- | ------------- |
| A            | 2021-01-05                   | Ramen         |
| B            | 2021-01-08                   | Curry         |

8. Total items and amount spent before membership
------------------------------------------------------------------
SELECT
    s.customer_id,
    COUNT(*) AS total_items,
    SUM(m.price) AS total_amount
FROM
    sales s
JOIN
    members mem ON s.customer_id = mem.customer_id
JOIN
    menu m ON s.product_id = m.product_id
WHERE
    s.order_date < mem.join_date
GROUP BY
    s.customer_id;
-----------------------------------------------------------------
| customer_id  | total_items  | total_amount  |
| ------------ | ------------ | ------------- |
| A            | 2            | 20            |
| B            | 3            | 30            |


9. Points per customer ($1 = 10 pts, Sushi 2x)
-----------------------------------------------------------------
SELECT
    s.customer_id,
    SUM(
        CASE
            WHEN m.product_name = 'sushi' THEN m.price * 10 * 2
            ELSE m.price * 10
        END
    ) AS total_points
FROM
    sales s
JOIN
    menu m ON s.product_id = m.product_id
GROUP BY
    s.customer_id;
| customer_id  | total_points  |
| ------------ | ------------- |
| A            | 520           |
| B            | 460           |
| C            | 400           |


10. In the first week after a customer joins the program (including their join date), they earn 2x points on all items, not just sushi â€“ how many points do customer A and B have at the end of January?
-------------------------------------------------------------------------------------------

SELECT
  s.customer_id,
  SUM(
    CASE
      WHEN s.order_date BETWEEN m.join_date AND m.join_date + INTERVAL '6 day' THEN s.points * 2
      ELSE s.points
    END
  ) AS total_points
FROM sales s
JOIN members m ON s.customer_id = m.customer_id
WHERE s.customer_id IN ('A', 'B')
  AND s.order_date BETWEEN '2023-01-01' AND '2023-01-31'
GROUP BY s.customer_id;
-------------------------------------------------------------------------------------------

| customer_id  | total_points  |
| ------------ | ------------- |
| A            | 38            |
| B            | 37            |

